#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MO_TOG(layer) &mo_tog layer layer
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define SYSTEM  3
#define NUMPAD  4


/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <LOWER RAISE>;
      then-layer = <SYSTEM>;
      };
  };
};

/ {
  macros {
    ZMK_MACRO(vim_o,  bindings = <&kp LG(RIGHT) &kp ENTER>;)
    ZMK_MACRO(vim_cc, bindings = <&kp LG(LEFT) &kp LS(LG(RIGHT)) &kp LG(X)>;)
  };
};

/ {
  behaviors {
    bmt: balanced_mod_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "BALANCED_MOD_TAP";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      flavor = "balanced";
      bindings = <&kp>, <&kp>;
    };

    mo_tog: behavior_mo_tog {
      compatible = "zmk,behavior-hold-tap";
      label = "mo_tog";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      bindings = <&mo>, <&tog>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      label = "QWERTY";
// --------------------------------------   ---------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  \   |
// |  ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT | ^Z  | aX  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
// -------------------| GUI | LWR | SPC |   | ENT | RSE  | <Bs |-------------------
      bindings = <
   &lt NUMPAD TAB &kp Q        &kp W       &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
   &lt NUMPAD ESC &kp A        &kp S       &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT      &bmt LCTRL Z &bmt LALT X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                            &kp LGUI MO_TOG(LOWER) &kp SPACE   &kp RET &mo RAISE &kp BSPC
      >;
    };

    lower_layer {
      label = "VIMNAV";
// --------------------------------------   --------------------------------------
// | ZAud |     |  w  |     |     |     |   |     |     |  <- |     |     |      |
// | ZVid | ->  |     |  <{ |  }> |     |   | LFT | DWN |  UP | RGT |  o  |      |
// | ZScr |     |  x  |  cc | AlPt|  b  |   |     |  <[ |  ]> |     |     |      |
// -------------------|     |     | ### |   |     |     | BsW |-------------------
      bindings = <
   &kp LG(LS(A)) &trans        &kp LA(RIGHT) &trans       &trans        &trans         &trans       &trans       &kp LG(LEFT) &trans    &trans &trans
   &kp LG(LS(V)) &kp LG(RIGHT) &trans        &kp LG(LBRC) &kp LG(RBRC)  &trans         &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT &vim_o &trans
   &kp LG(LS(S)) &trans        &kp DEL       &vim_cc      &kp LG(LA(C)) &kp LA(LEFT)   &trans       &kp LG(LBKT) &kp LG(RBKT) &trans    &trans &trans
                                             &trans       &trans        &trans         &trans       &trans       &kp LA(BSPC)
      >;
    };

    raise_layer {
      label = "SYMBOL";
// --------------------------------------   --------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// |      |  {  |  }  |  (  |  )  | '|' |   |     |  -  |  _  |  =  |  +  |  `   |
// |      |  ~  |  `  |  [  |  ]  |     |   |     |     |     |     |     |  ~   |
// -------------------|     |     |     |   |     | ### |     |-------------------
      bindings = <
   &trans &kp EXCL  &kp AT    &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR &trans
   &trans &kp LBRC  &kp RBRC  &kp LPAR &kp RPAR &kp PIPE    &kp MINUS &kp MINUS &kp UNDER       &kp EQUAL &kp PLUS &kp GRAVE
   &trans &kp TILDE &kp GRAVE &kp LBKT &kp RBKT &trans      &trans    &trans    &trans          &trans    &kp PIPE &kp TILDE
                              &kp LGUI &trans   &trans      &trans    &trans    &trans
      >;
    };

    system_layer {
      label = "SYSTEM";
// --------------------------------------   --------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     | VoUp| VoDn|     | Mute| Play |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// -------------------|     | ### |     |   |     | ### |     |-------------------
      bindings = <
   &trans     &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
   &trans     &trans       &trans       &trans       &trans       &trans         &kp LEFT &kp C_VOL_DN &kp C_VOL_UP &trans &kp K_MUTE &kp C_PLAY_PAUSE
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &trans   &trans &trans    &trans &trans
                                        &trans       &trans       &trans         &trans   &trans   &trans
      >;
    };

    numpad_layer {
      label = "NUMPAD";
// --------------------------------------   --------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      |     |     |     |     |     |   |  -  |  4  |  5  |  6  |  .  |      |
// |      |     |     |     |     |     |   |     |  1  |  2  |  3  |     |      |
// -------------------|     |     |     |   |     |  0  |     |-------------------
      bindings = <
   &trans &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6    &kp N7   &kp N8 &kp N9    &kp N0  &trans
   &trans &trans       &trans       &trans       &trans       &trans         &kp MINUS &kp N4   &kp N5 &kp N6    &kp DOT &trans
   &trans &trans       &trans       &trans       &trans       &trans         &trans    &kp N1   &kp N2 &kp N3    &trans  &trans
                                    &trans       &trans       &trans         &trans    &kp N0   &trans
      >;
    };
  };
};
